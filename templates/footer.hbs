<footer class="footer">
  <div class="footer-inner">
    {{#link 'help_center'}}{{help_center.name}}{{/link}}

    <div class="footer-language-selector">
      {{#if alternative_locales}}
      <div class="dropdown language-selector">
        <button class="dropdown-toggle" aria-haspopup="true">
          {{current_locale.name}}
          <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" focusable="false" viewBox="0 0 12 12"
            class="dropdown-chevron-icon">
            <path fill="none" stroke="currentColor" stroke-linecap="round" d="M3 4.5l2.6 2.6c.2.2.5.2.7 0L9 4.5" />
          </svg>
        </button>
        <span class="dropdown-menu dropdown-menu-end" role="menu">
          {{#each alternative_locales}}
          <a href="{{url}}" dir="{{direction}}" rel="nofollow" role="menuitem">
            {{name}}
          </a>
          {{/each}}
        </span>
      </div>
      {{/if}}
    </div>
  </div>
</footer>

<script>


  var acc = document.getElementsByClassName("article-accordion");
  var i;

  for (i = 0; i < acc.length; i++) {
    acc[i].addEventListener("click", function () {
      this.classList.toggle("active");
      var panel = this.nextElementSibling;
      if (panel.style.maxHeight) {
        panel.style.maxHeight = null;
      } else {
        panel.style.maxHeight = panel.scrollHeight + "px";
      }
    });
  }

  var sectionSelector = document.getElementsByClassName("section-question-title");
  for (var j = 0; j < sectionSelector.length; j++) {
    sectionSelector[j].addEventListener("click", function () {
      this.classList.toggle("section-question-title-active");
      var sectionBody = this.nextElementSibling;
      if (sectionBody.style.maxHeight) {
        sectionBody.style.maxHeight = null;
      } else {
        sectionBody.style.maxHeight = sectionBody.scrollHeight + "px";
      }
    })
  }


  // Video Library Controls
  function copyURL(button, url) {
    // Create a temporary input element
    var tempInput = document.createElement("input");
    // Set its value to the URL
    tempInput.value = url;
    // Append the input element to the body
    document.body.appendChild(tempInput);
    // Select the input content
    tempInput.select();
    tempInput.setSelectionRange(0, 99999); /* For mobile devices */
    // Copy the selected content
    document.execCommand("copy");
    // Remove the temporary input element
    document.body.removeChild(tempInput);
    // Change the button text to "Copied"
    button.innerText = "Copied";
    button.classList.add("btn-copied");

    // Return to defaults
    setTimeout(function () {
      button.innerText = "Copy URL";
      button.classList.remove("btn-copied");
    }, 2000);
  }

  filterVideos("video-all");

  function filterVideos(c) {
    let x, i, y, btn;
    x = document.getElementsByClassName("video");
    btn = document.getElementsByClassName("btn-filter");
    if (c == "video-all") c = "";
    for (i = 0; i < x.length; i++) {
      removeClass(x[i], "video-show");
      if (x[i].className.indexOf(c) > -1) {
        addClass(x[i], "video-show");
      };
    }
  }

  function addClass(element, name) {
    let i, arr1, arr2;
    arr1 = element.className.split(" ");
    arr2 = name.split(" ");
    for (i = 0; i < arr2.length; i++) {
      if (arr1.indexOf(arr2[i]) == -1) {
        element.className += " " + arr2[i];
      }
    }
  }

  function removeClass(element, name) {
    let i, arr1, arr2;
    arr1 = element.className.split(" ");
    arr2 = name.split(" ");
    for (i = 0; i < arr2.length; i++) {
      while (arr1.indexOf(arr2[i]) > -1) {
        arr1.splice(arr1.indexOf(arr2[i]), 1);
      }
    }
    element.className = arr1.join(" ");
  }
</script>